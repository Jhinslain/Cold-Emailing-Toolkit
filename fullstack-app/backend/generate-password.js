const bcrypt = require('bcrypt');

// Script pour g√©n√©rer un mot de passe hash√©
const generateHashedPassword = async (password) => {
  const saltRounds = 12; // Co√ªt de hachage (plus √©lev√© = plus s√©curis√© mais plus lent)
  const hashedPassword = await bcrypt.hash(password, saltRounds);
  
  console.log('üîê Mot de passe hash√© g√©n√©r√© :');
  console.log('=====================================');
  console.log(`Mot de passe original: ${password}`);
  console.log(`Mot de passe hash√©: ${hashedPassword}`);
  console.log('=====================================');
  console.log('');
  console.log('üìù Pour utiliser ce hash, ajoutez cette variable d\'environnement :');
  console.log(`HASHED_PASSWORD="${hashedPassword}"`);
  console.log('');
  console.log('‚ö†Ô∏è  IMPORTANT : Supprimez APP_PASSWORD de vos variables d\'environnement');
  console.log('   pour utiliser uniquement le mot de passe hash√©.');
};

// Utiliser le mot de passe fourni en argument ou un mot de passe par d√©faut
const password = process.argv[2] || 'majoli2024';

generateHashedPassword(password)
  .then(() => {
    console.log('‚úÖ G√©n√©ration termin√©e !');
    process.exit(0);
  })
  .catch(error => {
    console.error('‚ùå Erreur lors de la g√©n√©ration:', error);
    process.exit(1);
  }); 